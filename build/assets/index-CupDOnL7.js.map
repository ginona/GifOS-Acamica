{"version":3,"file":"index-CupDOnL7.js","sources":["../../js/darkMode.js","../../js/searchGifs.js","../../js/trendingCards.js","../../js/suggestionSearch.js","../../js/maxGif.js"],"sourcesContent":["document.documentElement.setAttribute('color-mode','light');\r\nfunction darkMode(){\r\n    const changeColorMode = e =>{\r\n        if(e.currentTarget.classList.contains(\"hideL\")){\r\n            document.documentElement.setAttribute(\"color-mode\", \"light\");\r\n            return;\r\n        }\r\n            document.documentElement.setAttribute(\"color-mode\", \"dark\");\r\n    };\r\n    const changeColorBtn = document.querySelectorAll(\".change-btn\");\r\n\r\n    changeColorBtn.forEach( btn => { btn.addEventListener(\"click\", changeColorMode) })\r\n};\r\n\r\ndarkMode();","const inputText = document.getElementById('search-txt')\r\nconst inputTextHeader = document.getElementById('search-txt-header')\r\nconst inputLens = document.getElementById('search-btn')\r\nconst inputLensHeader = document.getElementById('search-btn-header')\r\n\r\n/* async function getGifWithInput(text, pag){\r\n    const apiURL = `/api/giphy?endpoint=search&q=${text}&limit=12&offset=${pag}&rating=g&lang=en`;\r\n    const response = await fetch(apiURL);\r\n    const data = await response.json();\r\n    return data\r\n} */\r\n\r\nasync function getGifWithInput(text, pag) {\r\n    try {\r\n        const query = `q=${encodeURIComponent(text)}&limit=12&offset=${pag}&rating=g&lang=en`;\r\n        const response = await fetch(`/api/proxy?endpoint=search&query=${encodeURIComponent(query)}`);\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching search GIFs:', error);\r\n    }\r\n}\r\n\r\ninputText.addEventListener('keyup', function(e){ \r\n    if(e.key === 'Enter'){\r\n        const q = inputText.value;\r\n        showingViewResults(q);\r\n    }\r\n    console.log(e.key)\r\n })\r\n\r\n inputTextHeader.addEventListener('keyup', function(e){ \r\n    if(e.key === 'Enter'){\r\n        const q = inputTextHeader.value;\r\n        showingViewResults(q);\r\n    }\r\n })\r\n\r\n inputLens.addEventListener('click', function(){\r\n    showingViewResults(inputText.value)\r\n })\r\n\r\n inputLensHeader.addEventListener('click', function(){\r\n    showingViewResults(inputTextHeader.value)\r\n })\r\n\r\nasync function searchGifsFn(text, pag){\r\n    const divResult = document.getElementById('gifs-container');\r\n    let searchResults = await getGifWithInput(text, pag);\r\n    let resultHTML1 = '';\r\n    searchResults.data.forEach(obj => {\r\n         const url = obj.images.fixed_width.url\r\n\r\n         resultHTML1 += `<div class=\"slick-search\" id=\"${obj.id}\">\r\n         <img src=\"${url}\" alt=\"${obj.title}\">\r\n         <div class=\"card\">\r\n         <div class=\"group-icons\">\r\n             <div id=\"${obj.id}-add\" class=\"icons icon-heart\"></div>\r\n             <div id=\"${obj.id}-download\" class=\"icons icon-download\"></div>\r\n             <div id=\"${obj.id}-max\" class=\"icons icon-max\"></div>\r\n         </div>\r\n         <div class=\"text-card\">\r\n             <div class=\"text-card-user\">${obj.username !== '' ? obj.username : 'User' }</div>\r\n             <h3 class=\"text-card-title\">${obj.title}</h3>\r\n        </div>\r\n         </div>\r\n     </div>`;\r\n     })\r\n\r\n         divResult.insertAdjacentHTML('beforeend', resultHTML1)\r\n\r\n\r\n         trTrending(searchResults);\r\n\r\n}\r\n\r\n\r\nasync function getTextTrending() {\r\n    try {\r\n        const response = await fetch('/api/giphy?endpoint=trending/searches');\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching text GIFs:', error);\r\n    }\r\n}\r\n\r\nasync function setTrendingText(){\r\n    let trends = await getTextTrending();\r\n    let trendLocation = document.getElementById(\"random-trend\")\r\n    trendLocation. innerHTML = ''\r\n\r\n    for(let i = 0; i < 5; i++){\r\n        trendLocation.innerHTML += '<div class=\"trend-text-searched noSpace\">'+trends.data[i]+','+'</div>'\r\n    }\r\n    let trText = document.querySelectorAll('.trend-text-searched')\r\n    trText.forEach(div => div.addEventListener('click', e =>{\r\n        let str = e.currentTarget.textContent.substring(0, e.currentTarget.textContent.length - 1);\r\n        showingViewResults(str)\r\n    }))\r\n}\r\n\r\nsetTrendingText()\r\n\r\nfunction showSearch(){\r\n    let input = window.matchMedia(\"(min-width: 800px)\")\r\n\r\n    let y = window.scrollY\r\n    if(input.matches && y!== 0){\r\n        document.getElementById(\"hideSearch\").style.display=\"block\"\r\n        document.querySelector('.header').style.boxShadow = '1px 1px 4px 0 rgba(0, 0, 0, .1)'\r\n    }else{\r\n        document.getElementById(\"hideSearch\").style.display=\"none\"\r\n        document.querySelector('.header').style.boxShadow = 'none'\r\n    }\r\n    if(y!== 0){\r\n        document.querySelector('.header').style.boxShadow = '1px 1px 4px 0 rgba(0, 0, 0, .1)'\r\n    }else{\r\n        document.querySelector('.header').style.boxShadow = 'none'\r\n    }\r\n}\r\nwindow.addEventListener(\"scroll\", showSearch)","const buttonPrev = document.getElementById('button-prev');\r\nconst buttonNext = document.getElementById('button-next');\r\nconst track = document.getElementById('track');\r\nconst slickList = document.getElementById('slick-list');\r\nconst slick = document.querySelectorAll('.slick');\r\n\r\n\r\n\r\n\r\nasync function getGif(){\r\n    try {\r\n        const response = await fetch('/api/giphy?endpoint=gifs/trending&limit=12&rating=g');\r\n        const data = await response.json();\r\n        showGif(data);\r\n        trTrending(data);\r\n    } catch (error) {\r\n        console.error('Error fetching trending GIFs:', error);\r\n    }\r\n}\r\n\r\ngetGif()\r\n\r\n\r\nconst slickWidth = 275;\r\n\r\n\r\nbuttonPrev.onclick = () => Move(1);\r\nbuttonNext.onclick = () => Move(2);\r\n\r\n\r\nfunction Move(value){\r\n\r\n    let carrousel =  document.getElementById('slick-list');\r\n    const trackWidth = track.offsetWidth;\r\n    const listWidth = slickList.offsetWidth;\r\n\r\n    track.style.left == \"\" ? leftPosition = track.style.left = 0 : leftPosition = parseFloat(track.style.left.slice(0, -2) * -1);\r\n\r\n    if(leftPosition < (trackWidth - listWidth) && value == 2){\r\n        track.style.left = `${-1 * (leftPosition + 275)}px`;\r\n        carrousel.scroll(track.style.left,0)\r\n        return;\r\n    }else if(leftPosition > 0  && value == 1){\r\n        track.style.left = `${-1 * (leftPosition - 275)}px`\r\n        carrousel.scroll(track.style.left,0)\r\n    }\r\n}\r\n\r\nconst resultsEl = document.getElementById('track')\r\n\r\nfunction showGif(data){\r\n    let resultHTML = '';\r\n    data.data.forEach(obj => {\r\n         const url = obj.images.fixed_width.url\r\n\r\n\r\n         resultHTML += `<div class=\"slick\" id=\"${obj.id}\">\r\n                            <img src=\"${url}\" alt=\"${obj.title}\">\r\n                            <div class=\"card\">\r\n                            <div class=\"group-icons\">\r\n                                <div id=\"${obj.id}-add\" class=\"icons icon-heart\"></div>\r\n                                <div id=\"${obj.id}-download\" class=\"icons icon-download\"></div>\r\n                                <div id=\"${obj.id}-max\" class=\"icons icon-max\"></div>\r\n                            </div>\r\n                            <div class=\"text-card\">\r\n                                <div class=\"text-card-user\">${obj.username !== '' ? obj.username : 'User' }</div>\r\n                                <h3 class=\"text-card-title\">${obj.title}</h3>\r\n                            </div>\r\n                            </div>\r\n                        </div>`;\r\n     })\r\n\r\n     resultsEl.innerHTML = resultHTML\r\n}\r\n\r\n\r\nfunction addToLS(name,value) {\r\n    let extng = localStorage.getItem(name);\r\n    extng = extng ? JSON.parse(extng) : [];\r\n    extng.push(value);\r\n    localStorage.setItem(name,JSON.stringify(extng)); \r\n}\r\n\r\nfunction addToFavs(gif) {\r\n    if(document.getElementById(`${gif.id}-add`).classList.contains('icon-heart--active') == false)\r\n    {\r\n        document.getElementById(`${gif.id}-add`).classList.add('icon-heart--active')\r\n        addToLS('Favourites',gif)\r\n    }else{\r\n        document.getElementById(`${gif.id}-add`).classList.remove('icon-heart--active')\r\n        rmFavourites(gif);\r\n    }\r\n}\r\n\r\nasync function downloadFavs(gif){\r\n    let a = document.createElement('a');\r\n    let response = await fetch(`${gif.images.downsized.url}`);\r\n    let file = await response.blob();\r\n    a.download = `${gif.title}`;\r\n    a.href = window.URL.createObjectURL(file);\r\n    a.dataset.downloadurl = ['application/octet-stream', a.download, a.href].join(':');\r\n    a.click();\r\n}\r\n\r\nfunction rmFavourites(gif) {\r\n    let data = JSON.parse(localStorage.getItem('Favourites'))\r\n    \r\n    data.forEach((item,index) => item.id === gif.id ? data.splice(index,1): null)\r\n    localStorage.setItem('Favourites',JSON.stringify(data))\r\n}\r\nfunction rmMisGifos(gif) {\r\n    let data = JSON.parse(localStorage.getItem('MyGifs'))\r\n    data.forEach((item,index) => item === gif.id ? data.splice(index,1): null)\r\n    localStorage.setItem('MyGifs',JSON.stringify(data))\r\n    location.reload()\r\n}\r\n\r\nfunction eventsTrending(gif){\r\n    const toggleEvent = e => {\r\n        if (e.currentTarget.id == `${gif.id}-add`){\r\n            addToFavs(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-download`){\r\n            downloadFavs(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-max`){\r\n            searchById(gif.id);\r\n        }\r\n    };\r\n    const handlerEventsForEachIcon = document.querySelectorAll(\".icons\");\r\n    handlerEventsForEachIcon.forEach( btn => {\r\n        btn.addEventListener(\"click\",toggleEvent)\r\n    })\r\n    const cardMaxonMobile = document.getElementById(gif.id);\r\n    cardMaxonMobile.addEventListener(\"click\",function(){\r\n        if(isMobile()){\r\n            searchById(gif.id);\r\n        }\r\n    }) \r\n}\r\n\r\nfunction eventsTrendingFav(gif){\r\n    const toggleEvent = e => {\r\n        if (e.currentTarget.id == `${gif.id}-add`){\r\n            addToFavsFav(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-download`){\r\n            downloadFavs(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-max`){\r\n            searchByIdFav(gif.id);\r\n        }\r\n    };\r\n    const handlerEventsForEachIcon = document.querySelectorAll(\".icons-fav\");\r\n    handlerEventsForEachIcon.forEach( btn => {\r\n        btn.addEventListener(\"click\",toggleEvent)\r\n    })\r\n    const cardMaxonMobile = document.getElementById(gif.id);\r\n    cardMaxonMobile.addEventListener(\"click\",function(){\r\n        if(isMobile()){\r\n            searchByIdFav(gif.id);\r\n        }\r\n    }) \r\n}\r\n\r\nfunction eventsTrendingDelete(gif){\r\n    const toggleEvent = e => {\r\n        if (e.currentTarget.id == `${gif.id}-delete`){\r\n            rmMisGifos(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-download`){\r\n            downloadFavs(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-max`){\r\n            searchByIdDelete(gif.id);\r\n        }\r\n    };\r\n    const handlerEventsForEachIcon = document.querySelectorAll(\".icons-delete\");\r\n    handlerEventsForEachIcon.forEach( btn => {\r\n        btn.addEventListener(\"click\",toggleEvent)\r\n    })\r\n    const cardMaxonMobile = document.getElementById(gif.id);\r\n    cardMaxonMobile.addEventListener(\"click\",function(){\r\n        if(isMobile()){\r\n            searchByIdDelete(gif.id);\r\n        }\r\n    }) \r\n}\r\n\r\n\r\nfunction addToFavsFav(gif) {\r\n    if(document.getElementById(`${gif.id}-add`).classList.contains('icon-heart--active') == false)\r\n    {\r\n        document.getElementById(`${gif.id}-add`).classList.add('icon-heart--active')\r\n        addToLS('Favourites',gif)\r\n    }else{\r\n        document.getElementById(`${gif.id}-add`).classList.remove('icon-heart--active')\r\n        document.getElementById(`${gif.id}-add`).classList.add('icon-heart')\r\n        rmFavourites(gif);\r\n    }\r\n}\r\n\r\nfunction isMobile(){\r\n    return (\r\n        (navigator.userAgent.match(/Android/i)) ||\r\n        (navigator.userAgent.match(/webOS/i)) ||\r\n        (navigator.userAgent.match(/iPhone/i)) ||\r\n        (navigator.userAgent.match(/iPod/i)) ||\r\n        (navigator.userAgent.match(/iPad/i)) ||\r\n        (navigator.userAgent.match(/BlackBerry/i))\r\n    );\r\n}\r\n\r\nfunction trTrending(data){\r\n    data.data.map(function(gif){ let card =  eventsTrending(gif)\r\n        return card;\r\n    }).join('');\r\n}\r\n\r\nasync function searchById(id) {\r\n    try {\r\n        const response = await fetch(`/api/giphy?endpoint=gifs/${id}`);\r\n        const data = await response.json();\r\n        if (data.data) {\r\n            const modal = document.getElementById('modal');\r\n            let resultHTML = '';\r\n            const url = data.data.images.fixed_width.url;\r\n\r\n            resultHTML += `<div class=\"cross\" onclick=\"closeModal()\">X</div>\r\n            <div class=\"container\">\r\n                <div class=\"max-image-text\">\r\n                    <div class=\"image-max\">\r\n                        <img src=\"${url}\" alt=\"${data.data.title}\">\r\n                    </div>\r\n                    <div class=\"icon-text\">\r\n                        <div class=\"max-text\">\r\n                            <div class=\"text-card-user\">${data.data.username !== '' ? data.data.username : 'User'}</div>\r\n                            <h3 class=\"text-card-title\">${data.data.title}</h3>\r\n                        </div>\r\n                        <div class=\"iconos\">\r\n                            <div id=\"${data.data.id}-add-max-gif\" class=\"icons icon-heart\"></div>\r\n                            <div id=\"${data.data.id}-download-max-gif\" class=\"icons icon-download\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>`;\r\n\r\n            modal.innerHTML = resultHTML;\r\n            modal.style.display = 'block';\r\n\r\n            // Add event listeners\r\n            const favButton = document.getElementById(`${data.data.id}-add-max-gif`);\r\n            const downloadButton = document.getElementById(`${data.data.id}-download-max-gif`);\r\n\r\n            favButton.addEventListener('click', () => addFavMax(data.data));\r\n            downloadButton.addEventListener('click', () => downloadFavMax(data.data));\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching GIF by ID:', error);\r\n    }\r\n}\r\n\r\nfunction addFavMax(gif) {\r\n    let elementMax = document.getElementById(`${gif.id}-add-max-gif`)\r\n\r\n    if(elementMax.classList.contains('icon-heart--active') == false){\r\n        elementMax.classList.add('icon-heart--active')\r\n        addToLS('Favourites',gif)\r\n    }else{\r\n        elementMax.classList.remove('icon-heart--active')\r\n        rmFavourites(gif)\r\n    }\r\n}\r\n\r\nasync function downloadFavMax(gif){\r\n    let a = document.createElement('a');\r\n    let response = await fetch(`${gif.images.downsized.url}`);\r\n    let file = await response.blob();\r\n    a.download = `${gif.title}`;\r\n    a.href = window.URL.createObjectURL(file);\r\n    a.dataset.downloadurl = ['application/octet-stream', a.download, a.href].join(':');\r\n    a.click();\r\n}\r\n\r\nasync function searchByIdFav(id) {\r\n    try {\r\n        const response = await fetch(`/api/giphy?endpoint=gifs/${id}`);\r\n        const data = await response.json();\r\n        if (data.data) {\r\n            const modal = document.getElementById('modalFav');\r\n            let resultHTML = '';\r\n            const url = data.data.images.fixed_width.url;\r\n\r\n            resultHTML += `<div class=\"cross\" onclick=\"closeModal()\">X</div>\r\n            <div class=\"container\">\r\n                <div class=\"max-image-text\">\r\n                    <div class=\"image-max\">\r\n                        <img src=\"${url}\" alt=\"${data.data.title}\">\r\n                    </div>\r\n                    <div class=\"icon-text\">\r\n                        <div class=\"max-text\">\r\n                            <div class=\"text-card-user\">${data.data.username !== '' ? data.data.username : 'User'}</div>\r\n                            <h3 class=\"text-card-title\">${data.data.title}</h3>\r\n                        </div>\r\n                        <div class=\"iconos\">\r\n                            <div id=\"${data.data.id}-add-max-gif\" class=\"icons icon-heart--active\"></div>\r\n                            <div id=\"${data.data.id}-download-max-gif\" class=\"icons icon-download\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>`;\r\n\r\n            modal.querySelector('.modal-content').innerHTML = resultHTML;\r\n            modal.style.display = 'block';\r\n            eventsMaxGifFav(data);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching GIF by ID:', error);\r\n    }\r\n}\r\n\r\nasync function searchByIdDelete(id) {\r\n    try {\r\n        const response = await fetch(`/api/giphy?endpoint=gifs/${id}`);\r\n        const data = await response.json();\r\n        if (data.data) {\r\n            const modal = document.getElementById('modalDelete');\r\n            let resultHTML = '';\r\n            const url = data.data.images.fixed_width.url;\r\n\r\n            resultHTML += `<div class=\"cross\" onclick=\"closeModal()\">X</div>\r\n            <div class=\"container\">\r\n                <div class=\"max-image-text\">\r\n                    <div class=\"image-max\">\r\n                        <img src=\"${url}\" alt=\"${data.data.title}\">\r\n                    </div>\r\n                    <div class=\"icon-text\">\r\n                        <div class=\"max-text\">\r\n                            <div class=\"text-card-user\">${data.data.username !== '' ? data.data.username : 'User'}</div>\r\n                            <h3 class=\"text-card-title\">${data.data.title}</h3>\r\n                        </div>\r\n                        <div class=\"iconos\">\r\n                            <div id=\"${data.data.id}-delete\" class=\"icons icon-delete\"></div>\r\n                            <div id=\"${data.data.id}-download-max-gif\" class=\"icons icon-download\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>`;\r\n\r\n            modal.querySelector('.modal-content').innerHTML = resultHTML;\r\n            modal.style.display = 'block';\r\n            eventsMaxGifDelete(data.data);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching GIF by ID:', error);\r\n    }\r\n}\r\n\r\nfunction closeModal() {\r\n    const modals = document.querySelectorAll('.modal');\r\n    modals.forEach(modal => {\r\n        modal.style.display = 'none';\r\n    });\r\n}\r\n\r\n// Add click event listener to close modal when clicking outside\r\ndocument.addEventListener('click', (e) => {\r\n    const modals = document.querySelectorAll('.modal');\r\n    modals.forEach(modal => {\r\n        if (e.target === modal) {\r\n            closeModal();\r\n        }\r\n    });\r\n});","const searchInput = document.querySelector('.search-txt');\r\nconst suggestionsPanel = document.getElementById('suggestions');\r\n  \r\nfunction fnAutoComplete(){\r\n  searchInput.addEventListener('keyup', async (event) =>{\r\n      let sug = await getSuggestions(searchInput.value);\r\n      document.getElementById('search-btn').style.display = 'none'\r\n      document.getElementById('clean-btn').style.display = 'block'\r\n      if(searchInput.value == ''){\r\n        document.getElementById('search-btn').style.display = 'block'\r\n        document.getElementById('clean-btn').style.display = 'none'\r\n      }\r\n      suggestionsPanel.style.borderTop = \"1px solid rgba(156, 175, 195 ,.5)\";\r\n      const view = `\r\n        <ul class=\"suggestions\">\r\n            ${sug.map(item => `\r\n                <li class=\"option-list\"><i class=\"fa fa-search\"></i>${item.name}</li>\r\n            `).join('')}\r\n        </ul>\r\n        `;\r\n        if(sug.length !== 0){\r\n          suggestionsPanel.innerHTML = view\r\n        }else{\r\n          suggestionsPanel.innerHTML = ''\r\n          suggestionsPanel.style.borderTop = \"none\";\r\n        }\r\n\r\n        const optionList = document.querySelectorAll(\".option-list\");\r\n        optionList.forEach( li => li.addEventListener(\"click\",searchGifoSuggested))\r\n  })\r\n}\r\nfnAutoComplete()\r\n\r\ndocument.getElementById('clean-btn').addEventListener('click', function(){\r\n  document.getElementById('search-txt').value = ''\r\n  document.getElementById('search-btn').style.display = 'block'\r\n  document.getElementById('clean-btn').style.display = 'none'\r\n})\r\n\r\nasync function getSuggestions(text) {\r\n    try {\r\n        const response = await fetch(`/api/giphy?endpoint=search/tags&q=${text}`);\r\n        const data = await response.json();\r\n        if (data.data) {\r\n            showSuggestions(data.data);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching suggestions:', error);\r\n    }\r\n}\r\n\r\nconst searchGifoSuggested = (e) => {\r\n  let searchTitle = e.currentTarget.textContent\r\n  let inputSearch = document.getElementById('search-txt');\r\n  inputSearch.value = e.currentTarget.textContent;\r\n  let list = document.getElementById('suggestions');\r\n  list.innerHTML = '';\r\n  showingViewResults(searchTitle);\r\n}\r\n\r\nlet pag = 12 ;\r\nasync function searchMoreResults(textSearch) {\r\n    pag = pag + 12;\r\n    let gifsContainer = document.getElementById('gifs-container');\r\n    searchGifsFn(textSearch, pag)\r\n}\r\n\r\n\r\nasync function showingViewResults(textSearch) {\r\n  let searchResults = await getGifWithInput(textSearch);\r\n  let giftSection = document.getElementById('trend-text');\r\n  const divResultado = document.getElementById('search-resultados');\r\n  const viewGifs = `\r\n      <h1 class=\"main-title\">${textSearch}</h1>\r\n      <div id=\"gifs-container\" class=\"gifs-container gifs-container-search-results\">           \r\n      </div><br>\r\n      <div id=\"more-results\" class=\"button-suggestion\">\r\n          Ver más\r\n      </div> \r\n  `;\r\n  const viewNoResults = `\r\n      <div class=\"center-no-result\">\r\n      <h1 class=\"main-title\">${textSearch}</h1>\r\n      </div><br>\r\n      <div class=\"error-results\">\r\n          <img src=\"./img/icon-busqueda-sin-resultado.svg\" alt=\"Busqueda-sin-resultados\"><br><br>\r\n          <p>Intenta con otra búsqueda.</p><br>\r\n      </div>\r\n  `;\r\n  if( searchResults.data.length !== 0 ){\r\n      giftSection.innerHTML = viewGifs\r\n      searchGifsFn(textSearch, 0)\r\n      let moreResults = document.getElementById('more-results')\r\n      moreResults.addEventListener(\"click\", function(){\r\n          searchMoreResults(textSearch);\r\n      })\r\n  } else {\r\n      giftSection.innerHTML = viewNoResults\r\n  }\r\n  \r\n}","var modal = document.getElementById(\"modal\")\r\n\r\n\r\nfunction closeModal(){\r\n    modal.style.display = 'none';\r\n}\r\n\r\nasync function getGifById(id) {\r\n    try {\r\n        const response = await fetch(`/api/giphy?endpoint=gifs/${id}`);\r\n        const data = await response.json();\r\n        if (data.data) {\r\n            showGifDetails(data.data);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching GIF by ID:', error);\r\n    }\r\n}\r\n\r\nasync function searchById(gifId){\r\n    try{\r\n        const response = await fetch(`/api/giphy?endpoint=gifs/${gifId}`);\r\n        const data = await response.json();\r\n        searchByIdAndLoad(data)\r\n        eventsMaxGif(data.data)\r\n    }catch(error){\r\n        console.log('Error', error);\r\n    }\r\n}\r\n\r\nasync function searchByIdAndLoad(gifWithId){\r\n    let resultHTML = '';\r\n         const url = gifWithId.data.images.fixed_width.url\r\n\r\n        resultHTML += `<div class=\"cross\" onclick=\"closeModal()\">X</div>\r\n        <div class=\"container\">\r\n            <div class=\"max-image-text\">\r\n                <div class=\"image-max\">\r\n                    <img src=\"${url}\" alt=\"${gifWithId.data.title}\">\r\n                </div>\r\n                <div class=\"icon-text\">\r\n                    <div class=\"max-text\">\r\n                        <div class=\"text-card-user\">${gifWithId.data.username !== '' ? gifWithId.data.username : 'User' }</div>\r\n                        <h3 class=\"text-card-title\">${gifWithId.data.title}</h3>\r\n                    </div>\r\n                    <div class=\"iconos\">\r\n                        <div id=\"${gifWithId.data.id}-add-max-gif\" class=\"icons icon-heart\"></div>\r\n                        <div id=\"${gifWithId.data.id}-download-max-gif\" class=\"icons icon-download\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>`;\r\n\r\n     modal.innerHTML = resultHTML\r\n     modal.style.display = 'block';\r\n}\r\n\r\n\r\nfunction addToLSMaxGif(name,value) {\r\n    let existing = localStorage.getItem(name);\r\n    existing = existing ? JSON.parse(existing) : [];\r\n    existing.push(value);\r\n    localStorage.setItem(name,JSON.stringify(existing)); \r\n}\r\n\r\nfunction addFavMax(gif) {\r\n    let elementMax = document.getElementById(`${gif.id}-add-max-gif`)\r\n\r\n    if(elementMax.classList.contains('icon-heart--active') == false){\r\n        elementMax.classList.add('icon-heart--active')\r\n        addToLSMaxGif('Favourites',gif)\r\n    }else{\r\n        elementMax.classList.remove('icon-heart--active')\r\n        rmFavMax(gif)\r\n    }\r\n}\r\n\r\nasync function downloadFavMax(gif){\r\n    let a = document.createElement('a');\r\n    let response = await fetch(`${gif.images.downsized.url}`);\r\n    let file = await response.blob();\r\n    a.download = `${gif.title}`;\r\n    a.href = window.URL.createObjectURL(file);\r\n    a.dataset.downloadurl = ['application/octet-stream', a.download, a.href].join(':');\r\n    a.click();\r\n}\r\n\r\nfunction rmFavMax(gif) {\r\n    let data = JSON.parse(localStorage.getItem('Favourites'))\r\n    data.forEach((item,index) => item.id === gif.id ? data.splice(index,1): null)\r\n    localStorage.setItem('Favourites',JSON.stringify(data))\r\n}\r\n\r\nfunction eventsMaxGif(gif){\r\n    const toggleEvent = e => {\r\n        if (e.currentTarget.id == `${gif.id}-add-max-gif`){\r\n            addFavMax(gif);\r\n        }\r\n        if (e.currentTarget.id == `${gif.id}-download-max-gif`){\r\n            downloadFavMax(gif)\r\n        }\r\n    };\r\n    const handlerEventsForEacrhIcon = document.querySelectorAll(\".icons\");\r\n    handlerEventsForEacrhIcon.forEach( btn => {\r\n        btn.addEventListener(\"click\",toggleEvent)\r\n    }) \r\n}\r\n"],"names":["darkMode","changeColorMode","e","btn","inputText","inputTextHeader","inputLens","inputLensHeader","q","getTextTrending","error","setTrendingText","trends","trendLocation","i","div","str","showSearch","input","y","buttonPrev","buttonNext","track","slickList","getGif","data","showGif","trTrending","Move","value","carrousel","trackWidth","listWidth","resultsEl","resultHTML","obj","url","addToLS","name","extng","addToFavs","gif","rmFavourites","downloadFavs","a","file","item","index","eventsTrending","toggleEvent","searchById","isMobile","id","modal","favButton","downloadButton","addFavMax","downloadFavMax","elementMax","closeModal","searchInput","suggestionsPanel","fnAutoComplete","event","sug","getSuggestions","view","li","searchGifoSuggested","text","searchTitle","inputSearch","list","showingViewResults","pag","searchMoreResults","textSearch","searchResults","giftSection","viewGifs","viewNoResults"],"mappings":"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"}